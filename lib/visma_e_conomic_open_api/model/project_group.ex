# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule VismaEConomicOpenAPI.Model.ProjectGroup do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :number,
    :name,
    :type,
    :includeCostPriceInFinance,
    :costAccountOngoingType,
    :costAccountOngoing,
    :costContraAccountOngoing,
    :costAccountClosed,
    :includeSalesPriceInFinance,
    :salesAccountOngoingType,
    :salesAccountOngoing,
    :salesContraAccountOngoing,
    :salesAccountClosed,
    :objectVersion
  ]

  @type t :: %__MODULE__{
    :number => integer() | nil,
    :name => String.t,
    :type => ProjectGroupType,
    :includeCostPriceInFinance => boolean() | nil,
    :costAccountOngoingType => OngoingAccountType | nil,
    :costAccountOngoing => integer() | nil,
    :costContraAccountOngoing => integer() | nil,
    :costAccountClosed => integer() | nil,
    :includeSalesPriceInFinance => boolean() | nil,
    :salesAccountOngoingType => OngoingAccountType | nil,
    :salesAccountOngoing => integer() | nil,
    :salesContraAccountOngoing => integer() | nil,
    :salesAccountClosed => integer() | nil,
    :objectVersion => String.t | nil
  }
end

defimpl Poison.Decoder, for: VismaEConomicOpenAPI.Model.ProjectGroup do
  import VismaEConomicOpenAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:type, :struct, VismaEConomicOpenAPI.Model.ProjectGroupType, options)
    |> deserialize(:costAccountOngoingType, :struct, VismaEConomicOpenAPI.Model.OngoingAccountType, options)
    |> deserialize(:salesAccountOngoingType, :struct, VismaEConomicOpenAPI.Model.OngoingAccountType, options)
  end
end

